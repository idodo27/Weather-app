[{"C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\index.js":"1","C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\App.js":"2","C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\reportWebVitals.js":"3","C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\components\\DataFetch.js":"4","C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\components\\Weather.js":"5","C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\data\\weatherapi.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":2357,"mtime":1613050268980,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1325,"mtime":1612944657576,"results":"11","hashOfConfig":"8"},{"size":875,"mtime":1613049162344,"results":"12","hashOfConfig":"8"},{"size":369,"mtime":1612944407607,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"16j6m69",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\index.js",[],["31","32"],"C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\App.js",["33","34","35","36"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport cloudy from \"./cloudy.webp\";\nimport rain from \"./rain.webp\";\nimport sun from \"./sun.webp\";\nimport {getLocation} from './data/weatherapi';\nimport Weather, { getCity } from './components/Weather';\nconst App = props => {\n  const [Location, setLocation] = useState(null);\n  const [city, setCity] = useState();\n  \n  const citys = [\"\", \"Tel-Aviv\", \"Eilat\", \"Paris\", \"New-York\", \"Vancouver\", \"Hong-Kong\", \"London\"];\n  \n  const getIcon = () => {\n    let icon = \"\";\n    switch (Location.weather[0].main) {\n      case \"Clouds\":\n        icon = cloudy;\n        break;\n      case \"Clear\":\n        icon = sun;\n        break;\n      case \"Rain\":\n        icon = rain;\n        break;\n      default:\n        break;\n    }\n    return (\n      <img className=\"icon-set\" src={icon}/>\n    );\n  }\n\n  const getData = async () => {\n    try{ \n        const data = await getLocation(city);\n        setLocation(data);\n        \n    }catch(error) {\n      console.log(error.message);\n      \n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, [city]);\n  return (\n    <body Style=\"background-color: cadetblue;\">\n    <div className=\"divi\">\n      <div>\n        <h1><i>Weather App</i></h1>\n        <Weather setCityName={setCity}/>\n        {Location !== null ? (\n          <div>\n            <h4>Live Weather Condition</h4>\n\n            <h3>{Location.weather[0].main}</h3>\n            <div>{getIcon()}</div>\n            <div>\n              <h2>{parseFloat(Location.main.temp - 273.15).toFixed(1)}&deg;C</h2>\n            </div>\n            <div>\n              <h3><i></i>{Location.name} | {Location.sys.country}</h3>\n            </div>\n            <div className=\"divi\">              \n              <b>\n                City name: {Location.name}<br></br>\n                Description: {Location.weather[0].description}<br></br>\n                Visibility: {Location.visibility}<br></br>\n                Wind: {Location.wind.speed}<br></br>\n                Temp: {Math.round(Location.main.temp - 273.15)}<br></br>\n                Sunrise: {Location.sys.sunrise}<br></br>\n                Sunset: {Location.sys.sunset}<br></br>\n              </b>\n            </div>\n        </div>\n        \n        ) : <div className=\"divi\"></div>}\n         \n              \n      </div>\n     \n    </div>\n    </body>\n  );\n}\n\nexport default App;","C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\reportWebVitals.js",[],"C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\components\\DataFetch.js",["37"],"import React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Weather, {getCity} from './Weather'\r\n\r\n   \r\nconst citys = [\"\", \"Tel-Aviv\", \"Eilat\", \"Paris\", \"New-York\", \"Vancouver\", \"Hong-Kong\", \"London\"];\r\n\r\nfunction DataFetch() {\r\n    const [name, setName] = useState();\r\n    const [city, setCity] = useState([]);\r\n    const api = \"ea5d198725553cc9c31b3a9cf89ad810\";\r\n    useEffect(() => {\r\n        setName(getCity());\r\n    axios\r\n        .get(\"https://api.openweathermap.org/data/2.5/weather?q=\"+name+\"&appid=\"+api)\r\n        .then((res) => {\r\n            setCity(res.data);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n\r\n    }, [city, name]);\r\n\r\n    return (\r\n        \r\n        <div Style=\"padding: 30px\">\r\n\r\n                    <Weather/>\r\n                    {name != null ? \r\n                    <p>City name: {city.name}<br></br>\r\n                    Visibility: {city.visibility}<br></br>\r\n                    Wind: {city.wind.speed}<br></br>\r\n                    Temp: {Math.round(city.main.temp - 273.15)}<br></br>\r\n                    Sunrise: {city.sys.sunrise}<br></br>\r\n                    Sunset: {city.sys.sunset}<br></br>  \r\n                    </p> : <p></p>}</div>\r\n    );\r\n    \r\n}\r\nexport default DataFetch;",["38","39"],"C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\components\\Weather.js",["40","41","42","43"],"import React, {useEffect, useState} from 'react';\r\n\r\nexport const getCity = () => {\r\n  return Weather.city;\r\n}\r\n\r\n\r\nconst Weather = ({setCityName}) => {\r\n    const citys = [\"\", \"Tel-Aviv\", \"Eilat\", \"Paris\", \"New York\", \"Vancouver\", \"Hong Kong\", \"London\"];\r\n    const [city, setCity] = useState(citys[0]);\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    function handle(field, value){\r\n      field = value;\r\n    }\r\n\r\n    useEffect(() => {\r\n      setCityName(city);\r\n    },[city]);\r\n    return (\r\n    <div>\r\n        <select\r\n            onChange={(e) => {setCity(e.target.value)}}\r\n            Style=\"height:36px; fontSize: 29px; margin:30px;\">\r\n            {citys.map((c, k) => (\r\n              <option id={k} value={c} key={k}>{c}</option>\r\n            \r\n            ))\r\n            }\r\n            \r\n          </select>\r\n      </div>);\r\n}\r\n \r\nexport default Weather;\r\n","C:\\Users\\IDO\\Desktop\\מכללה\\סמסטר ג - 2020\\full stack - client\\weatherhooks\\src\\data\\weatherapi.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":7,"column":19,"nodeType":"50","messageId":"51","endLine":7,"endColumn":26},{"ruleId":"48","severity":1,"message":"52","line":12,"column":9,"nodeType":"50","messageId":"51","endLine":12,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":30,"column":7,"nodeType":"55","endLine":30,"endColumn":45},{"ruleId":"56","severity":1,"message":"57","line":47,"column":6,"nodeType":"58","endLine":47,"endColumn":12,"suggestions":"59"},{"ruleId":"48","severity":1,"message":"52","line":6,"column":7,"nodeType":"50","messageId":"51","endLine":6,"endColumn":12},{"ruleId":"44","replacedBy":"60"},{"ruleId":"46","replacedBy":"61"},{"ruleId":"48","severity":1,"message":"62","line":11,"column":12,"nodeType":"50","messageId":"51","endLine":11,"endColumn":19},{"ruleId":"48","severity":1,"message":"63","line":11,"column":21,"nodeType":"50","messageId":"51","endLine":11,"endColumn":31},{"ruleId":"48","severity":1,"message":"64","line":13,"column":14,"nodeType":"50","messageId":"51","endLine":13,"endColumn":20},{"ruleId":"56","severity":1,"message":"65","line":19,"column":7,"nodeType":"58","endLine":19,"endColumn":13,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'getCity' is defined but never used.","Identifier","unusedVar","'citys' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["69"],["67"],["68"],"'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.","'handle' is defined but never used.","React Hook useEffect has a missing dependency: 'setCityName'. Either include it or remove the dependency array. If 'setCityName' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [city, getData]",{"range":"75","text":"76"},"Update the dependencies array to be: [city, setCityName]",{"range":"77","text":"78"},[1085,1091],"[city, getData]",[478,484],"[city, setCityName]"]